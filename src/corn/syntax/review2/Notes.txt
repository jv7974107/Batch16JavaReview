Type Casting - converting value of one type to another

2 types: widening/implicit/automatic
        narrowing/explicit/manual

Conditional Statements:
1. if statement
2. switch statement

if statement:

SYNTAX:
    if (condition) {
          code A;
    }
    -------------------
    if (condition) {
        code A;
    } else {
        code B;
    }

    ---------------------
    when we have more conditions to test - we can add else if {}

    if (condition) {
        code A;
    } else if (condition) {
        code B;
    } else if (condition) {
        code C;
    } else {
        code D;
    }

   ----------------------------------
   nested if

  WHAT:  if inside another if
  WHY: when we have 1 condition depend on another
  How:

  if(condition) { -> outer if

        if(condition) { -> nested if
        }
  }

Scanner -----------------------

Class that is used to take input from a user

-----------------    Review 3   -----------------
logical operators: and &&, or || , ! not
why: when we need to test 2 or more conditions in 1 statement

AND
True && True ->TRUE
True && False -> FALSE
False && True -> FALSE
False && False -> FALSE

OR
True || True ->TRUE
True || False -> TRUE
False || True -> TRUE
False || False -> FALSE

NOT !

switch statement is another conditional statement in Java

switch(variable) {

    case1: code A;
           break;
    case2 : code B;
            break;
    default: code C;
}

switch case is a great alternative for if else if
switch case has limitations:
                        data types : NO boolean, long, double, float
                        operators: NO logical or relational

loops in Java -
    for
    while
    do while
    enhanced or advanced for loop

    int time=9;

    if(time>7) {
        SOPln("Hi"); //code executes 1 time
    }

    while(condition) {
        block of code to be repeated
    }


    while(time>7) {
        SOPln("Hi"); //code executes infinite times
    }

    ---------------------------------------

    do {
        block of code to be repeated
    }while (condition);